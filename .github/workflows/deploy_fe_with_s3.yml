name: deploy to aws s3
# main 브랜치에 push될 때 현재 스크립트 실행 trigger 발동
on: 
  push:
    branches:
      - dev
jobs:
# 워크플로우는 하나 이상의 작업(job)으로 구성. 여기서는 하나의 작업만을 정의
  build-and-deploy:
    runs-on: ubuntu-latest
    #각 작업은 여러 step(단계)로 구성
    steps:
    # actions는 github에서 제공되는 공식 워크플로우
    # checkout은 현재 레포의 main브랜치 소스코드를 copy
      - name: source code checkout 
        uses: actions/checkout@v2
      # npm을 사용하려면 nodejs 먼저 install
      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: npm install
        working-directory: .
        # run은 직접 사용하고자 하는 명령어임
        run: npm install

      - name: npm build
        working-directory: .
        run: npm run build

      # aws configure해서 액세스 키, 리전등 내용을 집어넣음
      - name: setup aws cli
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET}}
          aws-region: "ap-northeast-2"
      
      #s3 bucket을 비워야함
      - name: clear s3 bucket
      # s3://내 버킷명
        run: aws s3 rm s3://www.seunghyun.shop/ --recursive

      # s3에 dist폴더 내의 파일들을 copy해서 넣겠다.
      - name: deploy to s3 bucket
        run: aws s3 cp ./dist s3://www.seunghyun.shop/ --recursive

      # cloudfront 무효화 작업
      - name: invalidate cloudfront caches
        run: aws cloudfront create-invalidation --distribution-id E2SMD84Z1PBRG1 --paths "/*"


